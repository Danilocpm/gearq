<!DOCTYPE html>
<html lang="pt-br">
<head>
    <title>Criar Item</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
    <link rel="stylesheet" href="/createitem.css">
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.10.7/dist/sweetalert2.min.css" rel="stylesheet">

</head>
<body>

<div class="container">
  <div class="row justify-content-center">
    <h2 class="text-center">Criar Item</h2>
    <form action="/createitem" method="POST" enctype="multipart/form-data" style="margin: 50px 0;">
        <div class="form-group">
            <label for="nome">Nome:</label>
            <input type="text" class="form-control" id="nome" placeholder="Digite o nome do item" name="nome">
        </div>

        <div class="form-group">
            <label for="descricao">Descrição:</label>
            <textarea class="form-control" id="descricao" placeholder="Digite a descrição do item" name="descricao"></textarea>
        </div>

        <div class="form-group">
          <label for="portas">Portas:</label>
          <input type="text" class="form-control" id="portas" placeholder="Digite o número de portas" name="portas">
        </div>

        <div class="form-group">
          <label for="tipos_de_portas">Tipos de Portas:</label>
          <input type="text" class="form-control" id="tipos_de_portas" placeholder="Digite os tipos de portas" name="tipos_de_portas">
        </div>

        <div class="form-group">
          <label for="portas_adicionais">Portais Adicionais:</label>
          <input type="text" class="form-control" id="portas_adicionais" placeholder="Alguma Porta Adicional?" name="portas_adicionais">
        </div>

        <div class="form-group">
          <label for="tipos_de_portas_adicionais">Tipos de Portas Adicionais:</label>
          <input type="text" class="form-control" id="tipos_de_portas_adicionais" placeholder="Digite os tipos de portas" name="tipos_de_portas_adicionais">
        </div>

        <div class="form-group">
          <label for="protocolos">Protocolos:</label>
          <input type="text" class="form-control" id="protocolos" placeholder="Digite os Protocolos" name="protocolos">
        </div>

        <div class="form-group">
          <label for="altura">Altura:</label>
          <input type="text" class="form-control" id="altura" placeholder="Digite a Altura" name="altura">
        </div>

        <div class="form-group">
          <label for="largura">Largura:</label>
          <input type="text" class="form-control" id="largura" placeholder="Digite a Largura" name="largura">
        </div>

        <div class="form-group">
          <label for="memoria">Memoria:</label>
          <input type="text" class="form-control" id="memoria" placeholder="Digite a memoria" name="memoria">
        </div>

        <div class="form-group">
          <label for="processador">Processador:</label>
          <input type="text" class="form-control" id="processador" placeholder="Digite o tipo de processador" name="processador">
        </div>

        <div class="form-group">
          <label for="MAC">Memoria:</label>
          <input type="text" class="form-control" id="MAC" placeholder="Digite o MAC" name="MAC">
        </div>
        
        <div class="form-group">
          <label for="performance">Performance:</label>
          <input type="text" class="form-control" id="performance" placeholder="Qual a sua performance?" name="performance">
        </div>

        <div class="form-group">
          <label for="Capacidade_de_encaminhamento">Capacidade de Encaminhamento:</label>
          <input type="text" class="form-control" id="Capacidade_de_encaminhamento" placeholder="Digite a Capacidade de Encaminhamento" name="Capacidade_de_encaminhamento">
        </div>

        <div class="form-group">
          <label for="capacidade_de_computacao">Capacidade de Computacao:</label>
          <input type="text" class="form-control" id="capacidade_de_computacao" placeholder="Digite a Capacidade de Computacao" name="capacidade_de_computacao">
        </div>

        <div class="form-group">
          <label for="Frequência">Frequencia:</label>
          <input type="text" class="form-control" id="Frequência" placeholder="Digite a Frequência" name="Frequência">
        </div>

        <div class="form-group">
          <label for="watts">Watts:</label>
          <input type="text" class="form-control" id="watts" placeholder="Digite a Voltagem" name="watts">
        </div>

        <div class="form-group">
          <label for="image">Imagem do Item:</label>
          <input type="file" class="form-control" id="image" placeholder="Insira a Imagem" name="image" accept="image/*">
        </div>

        

        <!-- Adicione mais campos conforme necessário -->
        <button type="submit" class="btn btn-default">Enviar</button>
        <button type="button" class="btn btn-secondary" onclick="window.history.back('/menu');">Voltar</button>

      </div>
    </form>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.10.7/dist/sweetalert2.all.min.js"></script>
<script src="/src/index.js"></script>


<script>
  document.querySelector('form').addEventListener('submit', function(event) {
      event.preventDefault();
  
      let formData = new FormData();
      let formElements = this.elements;
  
      // Iterate over the form elements and append them to the FormData object
      for (let i = 0; i < formElements.length; i++) {
          let element = formElements[i];
          if (element.name) { // Check if the element has a name attribute
              if (element.type === 'file') {
                  // Handle file inputs
                  if (element.files.length > 0) {
                      formData.append(element.name, element.files[0]);
                  }
              } else {
                  // Handle other input types
                  formData.append(element.name, element.value);
              }
          }
      }
  
      fetch('/createitem', {
          method: 'POST',
          body: formData,
      })
      .then(response => {
          if (!response.ok) {
              throw new Error('Erro na rede!');
          }
          return response.json();
      })
      .then(data => {
          Swal.fire({
              icon: 'success',
              title: 'Sucesso',
              text: data.message
          });
      })
      .catch((error) => {
          Swal.fire({
              icon: 'error',
              title: 'Erro na criação',
              text: error.message
          });
          console.error('Error:', error);
      });
  });
  </script>

</body>
</html>

